
@{
    ViewBag.Title = "Projects";
}

<div class="row">
    <div class=" d-grid gap-2 d-flex justify-content-end">
        <button class="btn btn-danger deleteUserBtn" onclick="AddProject()" title="Add Project">
            <i class="bi bi-plus"></i>
        </button>
    </div>

</div>
<div class="row" id="project-container">
</div>


<div class="row">
</div>

<div class="modal fade" id="project-modal" tabindex="-1" aria-labelledby="project-modal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="project-modal-label">Edit Project</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-body">
            </div>
        </div>
    </div>
</div>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        List();
    });

    function AddProject(){
            fetch(`/Project/Add`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById("modal-body").innerHTML = data;
                    document.getElementById("project-modal-label").innerText = "Add Project";
                    OpenModal("project-modal");

                })
                .catch(error => OpenErrorModal(error) );
        }

    function EditProject(id) {
        fetch(`/Project/Edit/${id}`)
            .then(response => response.text())
            .then(data => {
                document.getElementById("modal-body").innerHTML=(data);
                document.getElementById("project-modal-label").innerText = "Edit Project";
                OpenModal("project-modal");

            })
            .catch(error => console.error("Error retrieving modal content", error));
    }
    
    function DeleteProject(id){
         fetch(`/Project/Delete/${id}`)
                .then(response => response.text())
                .then(data => {
                    var jsonData = JSON.parse(data)
                    if(jsonData.success){
                        OpenSuccessModal(jsonData.message, null);
                        List();
                    }
                    else{
                        OpenErrorModal(jsonData.message)
                    }
                })
                .catch(error => OpenErrorModal(error) );
    }

    function DeleteProjectConfirm(id){
        OpenConfirmModal(id, "Are you sure you want to delete this project? This action cannot be undone.", "DeleteProject('"+id+"')");
    }

    function List(){

        fetch('/Project/List')
                .then(response => response.text())
                .then(data => {
                    document.getElementById("project-container").innerHTML = data;
                    let table = new DataTable("#project-list", {

            layout: {
                top1Start: {
                    buttons: [
                        {
                            extend: "copy",
                            text: '<i class="bi bi-clipboard"></i> Copy',
                            className: "btn btn-secondary"
                        },
                        {
                            extend: "csv",
                            text: '<i class="bi bi-file-earmark-spreadsheet"></i> CSV',
                            className: "btn btn-success"
                        },
                        {
                            extend: "excel",
                            text: '<i class="bi bi-file-earmark-excel"></i> Excel',
                            className: "btn btn-success"
                        },
                        {
                            extend: "pdf",
                            text: '<i class="bi bi-file-earmark-pdf"></i> PDF',
                            className: "btn btn-danger"
                        },
                        {
                            extend: "print",
                            text: '<i class="bi bi-printer"></i> Print',
                            className: "btn btn-primary"
                        }
                    ]
                }
            }
        });
                })
                .catch(error => OpenErrorModal(error) );
    }


    function SaveProject() {
        let form = document.getElementById("project-form");
        let formData = new FormData(form);

            fetch("/Project/Save", {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                   CloseModal()
                   OpenSuccessModal(data.message, null);
                                           List();

                }

                else {
                    SetFormErrors(data.errors);
                }
            })
            .catch(error => OpenErrorModal(error) );
    }  
</script>
